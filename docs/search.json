[
  {
    "objectID": "posts/Garden/mudra-detection.html#training-and-prediction-interface",
    "href": "posts/Garden/mudra-detection.html#training-and-prediction-interface",
    "title": "Mudra Detection",
    "section": "Training and Prediction Interface",
    "text": "Training and Prediction Interface\n\n Open Fullscreen in New Tab"
  },
  {
    "objectID": "posts/Garden/mudra-detection.html#mudra-model-project-flow",
    "href": "posts/Garden/mudra-detection.html#mudra-model-project-flow",
    "title": "Mudra Detection",
    "section": "Mudra Model Project Flow",
    "text": "Mudra Model Project Flow\n\n\nDataset Creation\n\nCollected hand pose images showing different mudras using both left and right hands.\nExtracted 21 hand keypoints per image (x, y coordinates) using a hand-tracking model.\nStored data in a CSV format: 42 columns for keypoints + 1 column for output label (Mudra_Hand format, e.g., Mayura_L).\n\n\n\n\n\nThis Python script renames randomly named files into a sequential order with meaningful tags for better organization and clarity.\n\n\n\n\n\nThis Python script creates a JSON file listing only the image filenames in the folder, reducing the processing load on the JavaScript side by avoiding the need to scan the image directory.\n\n\n\n\nThis p5.js script loads mudra images, detects hand keypoints using ml5.js, extracts (x, y) coordinates, and saves them to a CSV for model training.\n\n\n\nData Validation\n\nChecked for missing or inaccurately plotted keypoints.\nEnsured correct label formatting and consistency across rows.\nIdentified class imbalance (e.g., fewer samples of katakamukha) and fixed it.\nRan data through ChatGPT for quality feedback.\n\n\n\n\nThis code ensures that the list of files in the fileList.json is fully synchronized with the actual image directory (Mudras_Compiled/). It checks each filename from the JSON file to verify that the corresponding image file exists in the directory. If any files are missing, they are logged as a warning; otherwise, a success message is displayed, confirming that all files are present and accounted for.\n\n\n\nModel Training\n\nUsed the formatted CSV to train a neural network model.\nMonitored loss values to track model learning.\nSaved trained models as .json and .bin files.\n\n\n\nModel Testing\n\nTested the model with new hand keypoint data to verify predictions.\nObserved inconsistencies across browsers (e.g., the model worked on Firefox but not Chrome).\nDiscovered potential issues with model file parsing and incorrect predictions.\n\n\n\nDebugging Phase\n\nIdentified possible causes like:\n\nInvalid or corrupted weight files\nIncorrect CSV formatting (e.g., confusion between one output column vs. two)\nHeavy or skipped images during preprocessing\n\nNoted that katakamukha images may have been bypassed due to tracking failures.\n\n\n\nNext Steps\n\nDebugged the image-to-CSV converter script to ensure no images are skipped.\nFinalised the prediction algorithm and integrated it with Chitta Swarams for real-time interaction."
  },
  {
    "objectID": "posts/Garden/Garden.html",
    "href": "posts/Garden/Garden.html",
    "title": "Garden",
    "section": "",
    "text": "Welcome to the garden 🌼🌸🌺\n\n\n\n\nThis generative artwork is a symbolic journey through the natural cycle of life and death, conveyed through a dynamic weather-to-nature transition and mathematical floral growth.\n\n\nIt begins with a storm, a metaphor for chaos, fear, and the inevitable forces of time. Heavy clouds roam, rain lashes down, and flashes of lightning tear the sky—suggesting the unpredictable onset of life or the turbulence near death. The environment is dark, uncertain, and moving.\n\n\nThen, a transition unfolds. Light slowly returns as the storm fades. The sun rises, illuminating a world now teeming with growth. Grass, ferns, and flowers bloom using parametric equations—life structured through nature’s mathematical order. Butterflies emerge, fluttering in soft figure-eights, symbolizing rebirth, fragility, and fleeting joy.\n\n\nThe dandelion appears last—a poignant symbol of both life and impermanence. Initially grounded, it transitions into its “blown” state. It’s the final breath, the quiet release, but also a beginning for new life elsewhere.\n\n\nEach flower, each motion, each particle serves as a visual metaphor:\n\n\n\nThe storm for hardship and the unknown.\n\n\nThe sunlight and bloom for life, hope, and becoming.\n\n\nThe dandelion seeds for decay, remembrance, and return.\n\n\n\nIn this piece, death is not an end—it is a transition, as natural and necessary as a storm giving way to sun. Life, in turn, is brief, beautiful, and blooming—always on the verge of letting go.\n\n\n\n\n\n\n\n\n\n\n\n\nButterfly’s movement follows a figure-eight trajectory, which can be modeled using sine and cosine functions:\n\nx(t) = A·cos(ωₓ·t)\ny(t) = B·sin(ωᵧ·t)\n  \n\nThese functions create smooth, looping motion—just like how real butterflies flutter rather than flying straight. Each butterfly has a slightly different frequency (ω), making its motion unique.\n\n\nTo keep them from flying off too far, we constrain their range:\n\nx ∈ [x₀ − dₓ, x₀ + dₓ]\ny ∈ [y₀ − dᵧ, y₀ + dᵧ]\n  \n\nThis ensures they stay within a specific area, rather than wandering infinitely.\n\n\n\n\n\n\n\n\nDandelions and seed dispersal use polar coordinates to arrange seeds in a circular pattern:\n\nx = r·cos(θ)\ny = r·sin(θ)\n  \n\nHere, r is the radius and θ the angle—this evenly spaces seeds around the center.\n\n\nTo animate the dandelion blooming, we apply a scaling transformation:\n\nS(t) = [\n  sx(t)   0\n   0    sy(t)\n]\n  \n\nWhere sx and sy scale the flower’s size based on bloom progress.\n\n\nThe seeds don’t remain static—they sway gently with the wind:\n\nx_seed = x₀ + A·sin(ω·t)\n  \n\nThis adds life and movement, as if the seeds are truly floating away."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rithika_blog",
    "section": "",
    "text": "Welcome to my blog! Here you’ll find my thoughts, projects, and creative explorations 🌸\n\n\n\n\n\n\n\n\n\n\n\nMudra Detection\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\nGarden\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\nNo matching items"
  }
]